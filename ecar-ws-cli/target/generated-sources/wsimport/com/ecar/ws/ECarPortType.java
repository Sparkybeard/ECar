
package com.ecar.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ECarPortType", targetNamespace = "http://ws.ecar.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ECarPortType {


    /**
     * 
     * @param userEmail
     * @param parkId
     * @return
     *     returns com.ecar.ws.CarView
     * @throws NoCarAvailableFault_Exception
     * @throws InsufficientCreditFault_Exception
     * @throws UserAlreadyHasCarFault_Exception
     * @throws InvalidParkFault_Exception
     * @throws InvalidUserFault_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "rentCar", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.RentCar")
    @ResponseWrapper(localName = "rentCarResponse", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.RentCarResponse")
    @Action(input = "http://ws.ecar.com/ECarPortType/rentCarRequest", output = "http://ws.ecar.com/ECarPortType/rentCarResponse", fault = {
        @FaultAction(className = InvalidParkFault_Exception.class, value = "http://ws.ecar.com/ECarPortType/rentCar/Fault/InvalidParkFault"),
        @FaultAction(className = InvalidUserFault_Exception.class, value = "http://ws.ecar.com/ECarPortType/rentCar/Fault/InvalidUserFault"),
        @FaultAction(className = NoCarAvailableFault_Exception.class, value = "http://ws.ecar.com/ECarPortType/rentCar/Fault/NoCarAvailableFault"),
        @FaultAction(className = UserAlreadyHasCarFault_Exception.class, value = "http://ws.ecar.com/ECarPortType/rentCar/Fault/UserAlreadyHasCarFault"),
        @FaultAction(className = InsufficientCreditFault_Exception.class, value = "http://ws.ecar.com/ECarPortType/rentCar/Fault/InsufficientCreditFault")
    })
    public CarView rentCar(
        @WebParam(name = "parkId", targetNamespace = "")
        String parkId,
        @WebParam(name = "userEmail", targetNamespace = "")
        String userEmail)
        throws InsufficientCreditFault_Exception, InvalidParkFault_Exception, InvalidUserFault_Exception, NoCarAvailableFault_Exception, UserAlreadyHasCarFault_Exception
    ;

    /**
     * 
     * @param userEmail
     * @param parkId
     * @throws CarNotRentedFault_Exception
     * @throws InvalidParkFault_Exception
     * @throws InvalidUserFault_Exception
     * @throws ParkFullFault_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "returnCar", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.ReturnCar")
    @ResponseWrapper(localName = "returnCarResponse", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.ReturnCarResponse")
    @Action(input = "http://ws.ecar.com/ECarPortType/returnCarRequest", output = "http://ws.ecar.com/ECarPortType/returnCarResponse", fault = {
        @FaultAction(className = InvalidParkFault_Exception.class, value = "http://ws.ecar.com/ECarPortType/returnCar/Fault/InvalidParkFault"),
        @FaultAction(className = InvalidUserFault_Exception.class, value = "http://ws.ecar.com/ECarPortType/returnCar/Fault/InvalidUserFault"),
        @FaultAction(className = ParkFullFault_Exception.class, value = "http://ws.ecar.com/ECarPortType/returnCar/Fault/ParkFullFault"),
        @FaultAction(className = CarNotRentedFault_Exception.class, value = "http://ws.ecar.com/ECarPortType/returnCar/Fault/CarNotRentedFault")
    })
    public void returnCar(
        @WebParam(name = "parkId", targetNamespace = "")
        String parkId,
        @WebParam(name = "userEmail", targetNamespace = "")
        String userEmail)
        throws CarNotRentedFault_Exception, InvalidParkFault_Exception, InvalidUserFault_Exception, ParkFullFault_Exception
    ;

    /**
     * 
     * @param input
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "testPing", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.TestPing")
    @ResponseWrapper(localName = "testPingResponse", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.TestPingResponse")
    @Action(input = "http://ws.ecar.com/ECarPortType/testPingRequest", output = "http://ws.ecar.com/ECarPortType/testPingResponse")
    public String testPing(
        @WebParam(name = "input", targetNamespace = "")
        String input);

    /**
     * 
     * @param userEmail
     * @return
     *     returns int
     * @throws InvalidUserFault_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCredit", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.GetCredit")
    @ResponseWrapper(localName = "getCreditResponse", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.GetCreditResponse")
    @Action(input = "http://ws.ecar.com/ECarPortType/getCreditRequest", output = "http://ws.ecar.com/ECarPortType/getCreditResponse", fault = {
        @FaultAction(className = InvalidUserFault_Exception.class, value = "http://ws.ecar.com/ECarPortType/getCredit/Fault/InvalidUserFault")
    })
    public int getCredit(
        @WebParam(name = "userEmail", targetNamespace = "")
        String userEmail)
        throws InvalidUserFault_Exception
    ;

    /**
     * 
     * @param maxNrParks
     * @param userCoords
     * @return
     *     returns java.util.List<com.ecar.ws.ParkView>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNearbyParks", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.GetNearbyParks")
    @ResponseWrapper(localName = "getNearbyParksResponse", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.GetNearbyParksResponse")
    @Action(input = "http://ws.ecar.com/ECarPortType/getNearbyParksRequest", output = "http://ws.ecar.com/ECarPortType/getNearbyParksResponse")
    public List<ParkView> getNearbyParks(
        @WebParam(name = "maxNrParks", targetNamespace = "")
        Integer maxNrParks,
        @WebParam(name = "userCoords", targetNamespace = "")
        CoordinatesView userCoords);

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "testClear", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.TestClear")
    @ResponseWrapper(localName = "testClearResponse", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.TestClearResponse")
    @Action(input = "http://ws.ecar.com/ECarPortType/testClearRequest", output = "http://ws.ecar.com/ECarPortType/testClearResponse")
    public void testClear();

    /**
     * 
     * @param initialParkState
     * @throws InitParkFault_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "testInitPark", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.TestInitPark")
    @ResponseWrapper(localName = "testInitParkResponse", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.TestInitParkResponse")
    @Action(input = "http://ws.ecar.com/ECarPortType/testInitParkRequest", output = "http://ws.ecar.com/ECarPortType/testInitParkResponse", fault = {
        @FaultAction(className = InitParkFault_Exception.class, value = "http://ws.ecar.com/ECarPortType/testInitPark/Fault/InitParkFault")
    })
    public void testInitPark(
        @WebParam(name = "initialParkState", targetNamespace = "")
        ParkView initialParkState)
        throws InitParkFault_Exception
    ;

    /**
     * 
     * @param parkId
     * @return
     *     returns com.ecar.ws.ParkView
     * @throws InvalidParkFault_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getParkView", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.GetParkView")
    @ResponseWrapper(localName = "getParkViewResponse", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.GetParkViewResponse")
    @Action(input = "http://ws.ecar.com/ECarPortType/getParkViewRequest", output = "http://ws.ecar.com/ECarPortType/getParkViewResponse", fault = {
        @FaultAction(className = InvalidParkFault_Exception.class, value = "http://ws.ecar.com/ECarPortType/getParkView/Fault/InvalidParkFault")
    })
    public ParkView getParkView(
        @WebParam(name = "parkId", targetNamespace = "")
        String parkId)
        throws InvalidParkFault_Exception
    ;

    /**
     * 
     * @param initialUserCredit
     * @throws InitFault_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "testInit", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.TestInit")
    @ResponseWrapper(localName = "testInitResponse", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.TestInitResponse")
    @Action(input = "http://ws.ecar.com/ECarPortType/testInitRequest", output = "http://ws.ecar.com/ECarPortType/testInitResponse", fault = {
        @FaultAction(className = InitFault_Exception.class, value = "http://ws.ecar.com/ECarPortType/testInit/Fault/InitFault")
    })
    public void testInit(
        @WebParam(name = "initialUserCredit", targetNamespace = "")
        int initialUserCredit)
        throws InitFault_Exception
    ;

    /**
     * 
     * @param userEmail
     * @return
     *     returns com.ecar.ws.UserView
     * @throws InvalidEmailFault_Exception
     * @throws EmailAlreadyExistsFault_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "activateUser", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.ActivateUser")
    @ResponseWrapper(localName = "activateUserResponse", targetNamespace = "http://ws.ecar.com/", className = "com.ecar.ws.ActivateUserResponse")
    @Action(input = "http://ws.ecar.com/ECarPortType/activateUserRequest", output = "http://ws.ecar.com/ECarPortType/activateUserResponse", fault = {
        @FaultAction(className = InvalidEmailFault_Exception.class, value = "http://ws.ecar.com/ECarPortType/activateUser/Fault/InvalidEmailFault"),
        @FaultAction(className = EmailAlreadyExistsFault_Exception.class, value = "http://ws.ecar.com/ECarPortType/activateUser/Fault/EmailAlreadyExistsFault")
    })
    public UserView activateUser(
        @WebParam(name = "userEmail", targetNamespace = "")
        String userEmail)
        throws EmailAlreadyExistsFault_Exception, InvalidEmailFault_Exception
    ;

}
