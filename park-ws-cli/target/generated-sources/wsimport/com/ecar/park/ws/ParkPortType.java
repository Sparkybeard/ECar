
package com.ecar.park.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ParkPortType", targetNamespace = "http://ws.park.ecar.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ParkPortType {


    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "testClear", targetNamespace = "http://ws.park.ecar.com/", className = "com.ecar.park.ws.TestClear")
    @ResponseWrapper(localName = "testClearResponse", targetNamespace = "http://ws.park.ecar.com/", className = "com.ecar.park.ws.TestClearResponse")
    @Action(input = "http://ws.park.ecar.com/ParkPortType/testClearRequest", output = "http://ws.park.ecar.com/ParkPortType/testClearResponse")
    public void testClear();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "testPing", targetNamespace = "http://ws.park.ecar.com/", className = "com.ecar.park.ws.TestPing")
    @ResponseWrapper(localName = "testPingResponse", targetNamespace = "http://ws.park.ecar.com/", className = "com.ecar.park.ws.TestPingResponse")
    @Action(input = "http://ws.park.ecar.com/ParkPortType/testPingRequest", output = "http://ws.park.ecar.com/ParkPortType/testPingResponse")
    public String testPing(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns com.ecar.park.ws.ParkStats
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStats", targetNamespace = "http://ws.park.ecar.com/", className = "com.ecar.park.ws.GetStats")
    @ResponseWrapper(localName = "getStatsResponse", targetNamespace = "http://ws.park.ecar.com/", className = "com.ecar.park.ws.GetStatsResponse")
    @Action(input = "http://ws.park.ecar.com/ParkPortType/getStatsRequest", output = "http://ws.park.ecar.com/ParkPortType/getStatsResponse")
    public ParkStats getStats();

    /**
     * 
     * @throws NoCarFault_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "rentCar", targetNamespace = "http://ws.park.ecar.com/", className = "com.ecar.park.ws.RentCar")
    @ResponseWrapper(localName = "rentCarResponse", targetNamespace = "http://ws.park.ecar.com/", className = "com.ecar.park.ws.RentCarResponse")
    @Action(input = "http://ws.park.ecar.com/ParkPortType/rentCarRequest", output = "http://ws.park.ecar.com/ParkPortType/rentCarResponse", fault = {
        @FaultAction(className = NoCarFault_Exception.class, value = "http://ws.park.ecar.com/ParkPortType/rentCar/Fault/NoCarFault")
    })
    public void rentCar()
        throws NoCarFault_Exception
    ;

    /**
     * 
     * @return
     *     returns int
     * @throws NoSpaceFault_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnCar", targetNamespace = "http://ws.park.ecar.com/", className = "com.ecar.park.ws.ReturnCar")
    @ResponseWrapper(localName = "returnCarResponse", targetNamespace = "http://ws.park.ecar.com/", className = "com.ecar.park.ws.ReturnCarResponse")
    @Action(input = "http://ws.park.ecar.com/ParkPortType/returnCarRequest", output = "http://ws.park.ecar.com/ParkPortType/returnCarResponse", fault = {
        @FaultAction(className = NoSpaceFault_Exception.class, value = "http://ws.park.ecar.com/ParkPortType/returnCar/Fault/NoSpaceFault")
    })
    public int returnCar()
        throws NoSpaceFault_Exception
    ;

    /**
     * 
     * @return
     *     returns com.ecar.park.ws.ParkInfo
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getInfo", targetNamespace = "http://ws.park.ecar.com/", className = "com.ecar.park.ws.GetInfo")
    @ResponseWrapper(localName = "getInfoResponse", targetNamespace = "http://ws.park.ecar.com/", className = "com.ecar.park.ws.GetInfoResponse")
    @Action(input = "http://ws.park.ecar.com/ParkPortType/getInfoRequest", output = "http://ws.park.ecar.com/ParkPortType/getInfoResponse")
    public ParkInfo getInfo();

    /**
     * 
     * @param xy
     * @param returnBonus
     * @param capacity
     * @throws BadInitFault_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "testInit", targetNamespace = "http://ws.park.ecar.com/", className = "com.ecar.park.ws.TestInit")
    @ResponseWrapper(localName = "testInitResponse", targetNamespace = "http://ws.park.ecar.com/", className = "com.ecar.park.ws.TestInitResponse")
    @Action(input = "http://ws.park.ecar.com/ParkPortType/testInitRequest", output = "http://ws.park.ecar.com/ParkPortType/testInitResponse", fault = {
        @FaultAction(className = BadInitFault_Exception.class, value = "http://ws.park.ecar.com/ParkPortType/testInit/Fault/BadInitFault")
    })
    public void testInit(
        @WebParam(name = "xy", targetNamespace = "")
        Xy xy,
        @WebParam(name = "capacity", targetNamespace = "")
        int capacity,
        @WebParam(name = "returnBonus", targetNamespace = "")
        int returnBonus)
        throws BadInitFault_Exception
    ;

}
